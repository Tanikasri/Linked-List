#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

// Function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}
void insertMiddle(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
        return;
    }

    struct Node* slow = *head;
    struct Node* fast = *head;

    // Find the middle using slow and fast pointer technique
    while (fast != NULL && fast->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;
    }

    // Insert the new node in the middle
    newNode->next = slow->next;
    slow->next = newNode;
}

void deleteMiddle(struct Node** head) {
    if (*head == NULL) return; // List is empty

    if ((*head)->next == NULL) {
        free(*head); // List has only one node
        *head = NULL;
        return;
    }

    struct Node* slow = *head;
    struct Node* fast = *head;
    struct Node* prev = NULL;

    // Find the middle node using slow and fast pointer technique
    while (fast != NULL && fast->next != NULL) {
        prev = slow;
        slow = slow->next;
        fast = fast->next->next;
    }

    // Delete the middle node
    if (prev != NULL) {
        prev->next = slow->next;
        free(slow); // Free memory
    }
}

void printList(struct Node* head) {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}
